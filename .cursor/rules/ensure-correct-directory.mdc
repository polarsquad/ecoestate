---
description: Only use absolute paths when changing to console command target dir
globs: 
alwaysApply: true
---
 # Ensure Correct Directory for Shell Commands Rule

**Type:** Strict rule

## Rule Description
The AI assistant MUST ensure it is in the correct directory before executing any shell command via the terminal tool.
This should be achieved by prepending an appropriate `cd <target_directory_absolute_path>` command, followed by `&&`, to
the main command within a *single* terminal tool execution. Do not change directories in a separate step. The correct
absolute path can be determined using `git rev-parse --show-toplevel`. Only absolute paths must be used - never relative
paths like `server/` or `server/src/`.

## Rationale
Running commands from the wrong directory is a common source of errors (e.g., file not found, command not found in PATH context, incorrect relative paths). Explicitly changing to the target directory within the same command execution ensures the command runs in the intended context and reduces ambiguity.

## Allowed Behavior
- **Prepending `cd`:** All `run_terminal_cmd` calls must start with `cd <intended_directory_absolute_path> && ...` unless the command is explicitly intended to run from the current working directory (which should be rare and clearly justified).
- **Determining Target Directory:** The `<intended_directory_absolute_path>` should be determined based on the context of the task (e.g., the location of a `package.json` for npm commands, the location of source files for build commands, etc.).
- **Using Project Root:** The project root directory can be reliably obtained using `git rev-parse --show-toplevel` within the command itself (e.g., `cd $(git rev-parse --show-toplevel)/server && ...`). This is useful for constructing absolute paths relative to the project root.
- **Single Step:** The `cd` and the main command must be part of the same string passed to the terminal tool, linked by `&&`.
- **Absolute paths only:** For the `cd` command, only use absolute paths. Otherwise, you might assume you are in the
  right directory for a relative path when you are in fact not.

## Example Violations
- Running `npm install` without first navigating to the directory containing the `package.json`.
- Using a relative path with the `cd` command.
- Running `python script.py` assuming the current directory is correct without explicitly changing to the script's directory or using absolute paths appropriately.
- `run_terminal_cmd(command="ls my_files")` (when the CWD might not be the parent of `my_files`).
- Running `cd server` in one step, and `npm install` in a subsequent step.
- `run_terminal_cmd(command="cd server && npm install")` assumes `cd server` gets you in the right directory from where
  you are when it might not.

## Example Allowed Actions
- `run_terminal_cmd(command="cd $(git rev-parse --show-toplevel)/client && npm run build")`
- `run_terminal_cmd(command="cd /absolute/path/to/data && process_data.sh")`
