name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # Specify a Node.js version compatible with your project
          cache: "npm"
          cache-dependency-path: |
            client/package-lock.json
            server/package-lock.json
      - name: Install Dependencies - Client
        run: npm ci --prefix client
      - name: Install Dependencies - Server
        run: npm ci --prefix server
      - name: Run ESLint - Client
        run: npm run lint --prefix client
      - name: Run ESLint - Server
        run: npm run lint --prefix server

  trivy:
    name: Trivy IaC Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: 'tf/'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          trivy-config: trivy-iac.yaml # Optional: if you have a trivy config file

  test-backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    needs: lint # Run after lint job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: server/package-lock.json
      - name: Install Dependencies - Server
        run: npm ci --prefix server
      - name: Run Backend Tests
        run: npm test --prefix server

  test-frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    needs: lint # Run after lint job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: client/package-lock.json
      - name: Install Dependencies - Client
        run: npm ci --prefix client
      - name: Run Frontend Tests
        run: npm test --prefix client
